{"ast":null,"code":"var _jsxFileName = \"/Users/y/Documents/GitHub/react-pwa-karute/src/components/Treatment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchPatientName, fetchTreatments, fetchInjuries } from '../api/fetchPatientDetails';\nimport { addPatient, updatePatient, deletePatient } from '../api/patientOperations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Treatment = () => {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  const navigate = useNavigate();\n  const [patientName, setPatientName] = useState('');\n  const [editName, setEditName] = useState('');\n  const [editTeam, setEditTeam] = useState('');\n  const [isNew, setIsNew] = useState(false);\n  useEffect(() => {\n    if (patientId === 'new') {\n      setIsNew(true);\n      return;\n    }\n    const getPatientDetails = async () => {\n      const name = await fetchPatientName(patientId);\n      setPatientName(name);\n      setEditName(name); // 編集用フィールドに名前をセット\n    };\n    getPatientDetails();\n  }, [patientId]);\n\n  // 患者を追加または更新\n  const handleSave = async () => {\n    if (isNew) {\n      await addPatient(editName, editTeam);\n      alert('患者を追加しました！');\n    } else {\n      await updatePatient(patientId, editName, editTeam);\n      alert('患者情報を更新しました！');\n    }\n    navigate('/patients');\n  };\n\n  // 患者を削除\n  const handleDelete = async () => {\n    if (window.confirm('本当に削除しますか？')) {\n      await deletePatient(patientId);\n      alert('患者を削除しました！');\n      navigate('/patients');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u60A3\\u8005\\u8A73\\u7D30\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"\\u30C8\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u306B\\u623B\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isNew ? '患者新規作成' : `患者名: ${patientName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u60A3\\u8005\\u540D\",\n        value: editName,\n        onChange: e => setEditName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u30C1\\u30FC\\u30E0\",\n        value: editTeam,\n        onChange: e => setEditTeam(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: isNew ? '追加' : '更新'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !isNew && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        style: {\n          marginLeft: '10px',\n          color: 'red'\n        },\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Treatment, \"8kpxYB3DHpm44Jyq56oi6FUXmi0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Treatment;\nexport default Treatment;\nvar _c;\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","fetchPatientName","fetchTreatments","fetchInjuries","addPatient","updatePatient","deletePatient","jsxDEV","_jsxDEV","Treatment","_s","patientId","navigate","patientName","setPatientName","editName","setEditName","editTeam","setEditTeam","isNew","setIsNew","getPatientDetails","name","handleSave","alert","handleDelete","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","style","marginLeft","color","_c","$RefreshReg$"],"sources":["/Users/y/Documents/GitHub/react-pwa-karute/src/components/Treatment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchPatientName, fetchTreatments, fetchInjuries } from '../api/fetchPatientDetails';\nimport { addPatient, updatePatient, deletePatient } from '../api/patientOperations';\n\nconst Treatment = () => {\n  const { patientId } = useParams();\n  const navigate = useNavigate();\n  const [patientName, setPatientName] = useState('');\n  const [editName, setEditName] = useState('');\n  const [editTeam, setEditTeam] = useState('');\n  const [isNew, setIsNew] = useState(false);\n\n  useEffect(() => {\n    if (patientId === 'new') {\n      setIsNew(true);\n      return;\n    }\n\n    const getPatientDetails = async () => {\n      const name = await fetchPatientName(patientId);\n      setPatientName(name);\n      setEditName(name); // 編集用フィールドに名前をセット\n    };\n    getPatientDetails();\n  }, [patientId]);\n\n  // 患者を追加または更新\n  const handleSave = async () => {\n    if (isNew) {\n      await addPatient(editName, editTeam);\n      alert('患者を追加しました！');\n    } else {\n      await updatePatient(patientId, editName, editTeam);\n      alert('患者情報を更新しました！');\n    }\n    navigate('/patients');\n  };\n\n  // 患者を削除\n  const handleDelete = async () => {\n    if (window.confirm('本当に削除しますか？')) {\n      await deletePatient(patientId);\n      alert('患者を削除しました！');\n      navigate('/patients');\n    }\n  };\n\n  return (\n    <div>\n      <h2>患者詳細ページ</h2>\n\n      <button onClick={() => navigate('/')}>\n        トップページに戻る\n      </button>\n\n      <div>\n        <h3>{isNew ? '患者新規作成' : `患者名: ${patientName}`}</h3>\n        <input\n          placeholder=\"患者名\"\n          value={editName}\n          onChange={(e) => setEditName(e.target.value)}\n        />\n        <input\n          placeholder=\"チーム\"\n          value={editTeam}\n          onChange={(e) => setEditTeam(e.target.value)}\n        />\n        <button onClick={handleSave}>{isNew ? '追加' : '更新'}</button>\n\n        {!isNew && (\n          <button onClick={handleDelete} style={{ marginLeft: '10px', color: 'red' }}>\n            削除\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Treatment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}