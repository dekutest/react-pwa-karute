{"ast":null,"code":"import { supabase } from '../utils/supabaseClient';\nexport const updateInjuryStatus = async injuryId => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('injuries').update({\n      is_healed: true\n    }).eq('id', injuryId);\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error updating injury status:', error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["supabase","updateInjuryStatus","injuryId","data","error","from","update","is_healed","eq","console","message"],"sources":["/Users/y/Documents/GitHub/react-pwa-karute/src/api/updateInjuryStatus.js"],"sourcesContent":["import { supabase } from '../utils/supabaseClient';\n\nexport const updateInjuryStatus = async (injuryId) => {\n  try {\n    const { data, error } = await supabase\n      .from('injuries')\n      .update({ is_healed: true })\n      .eq('id', injuryId);\n\n    if (error) throw error;\n\n    return data;\n  } catch (error) {\n    console.error('Error updating injury status:', error.message);\n    return null;\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,yBAAyB;AAElD,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMJ,QAAQ,CACnCK,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC,CAC3BC,EAAE,CAAC,IAAI,EAAEN,QAAQ,CAAC;IAErB,IAAIE,KAAK,EAAE,MAAMA,KAAK;IAEtB,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdK,OAAO,CAACL,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACM,OAAO,CAAC;IAC7D,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}