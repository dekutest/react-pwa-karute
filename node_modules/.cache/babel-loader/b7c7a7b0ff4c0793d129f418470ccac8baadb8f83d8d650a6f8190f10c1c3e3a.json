{"ast":null,"code":"var _jsxFileName = \"/Users/y/Documents/GitHub/react-pwa-karute/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userRole, setUserRole] = useState(null);\n\n  // Googleログイン処理\n  const handleGoogleLogin = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'google'\n      });\n      if (error) throw error;\n      console.log('Googleログインリクエスト成功');\n    } catch (err) {\n      console.error('Googleログインエラー:', err.message);\n    }\n  };\n\n  // ユーザー情報を登録する関数\n  const registerUser = async user => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('users').upsert([{\n        id: user.id,\n        email: user.email,\n        name: user.user_metadata.full_name || 'No Name',\n        role: 'practitioner' // 初期値として設定\n      }]).select(); // ← ここを追加\n\n      if (error) {\n        console.error('ユーザー登録エラー:', error.message);\n      } else if (data.length > 0) {\n        console.log('ユーザー登録成功:', data);\n      } else {\n        console.warn('アップサート成功だが、返されたデータが空です');\n      }\n    } catch (err) {\n      console.error('アップサート処理エラー:', err.message);\n    }\n  };\n\n  // ログインユーザーの権限を取得\n  const fetchUserRole = async userId => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('users').select('role').eq('id', userId).single();\n      if (error) {\n        console.error('権限取得エラー:', error.message);\n      } else if (data) {\n        setUserRole(data.role);\n        console.log('ユーザー権限:', data.role);\n      } else {\n        console.warn('権限が取得できませんでした');\n      }\n    } catch (err) {\n      console.error('権限取得処理エラー:', err.message);\n    }\n  };\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        if (session) {\n          console.log('ログイン成功:', session.user);\n          await registerUser(session.user);\n          await fetchUserRole(session.user.id); // 権限を取得\n        } else {\n          console.log('未ログイン状態');\n        }\n      } catch (err) {\n        console.error('セッション取得エラー:', err.message);\n      }\n    };\n    getUserInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Google\\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Google\\u3067\\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), userRole && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u3042\\u306A\\u305F\\u306E\\u6A29\\u9650: \", userRole]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"vPp0yqj+hRw1UlF3QGOL0H6Z92E=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","Login","_s","userRole","setUserRole","handleGoogleLogin","error","auth","signInWithOAuth","provider","console","log","err","message","registerUser","user","data","from","upsert","id","email","name","user_metadata","full_name","role","select","length","warn","fetchUserRole","userId","eq","single","getUserInfo","session","getSession","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/y/Documents/GitHub/react-pwa-karute/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\n\nconst Login = () => {\n  const [userRole, setUserRole] = useState(null);\n\n  // Googleログイン処理\n  const handleGoogleLogin = async () => {\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n      });\n      if (error) throw error;\n      console.log('Googleログインリクエスト成功');\n    } catch (err) {\n      console.error('Googleログインエラー:', err.message);\n    }\n  };\n\n // ユーザー情報を登録する関数\nconst registerUser = async (user) => {\n  try {\n    const { data, error } = await supabase\n      .from('users')\n      .upsert([{ \n        id: user.id,  \n        email: user.email, \n        name: user.user_metadata.full_name || 'No Name', \n        role: 'practitioner'  // 初期値として設定\n      }])\n      .select();  // ← ここを追加\n\n    if (error) {\n      console.error('ユーザー登録エラー:', error.message);\n    } else if (data.length > 0) {\n      console.log('ユーザー登録成功:', data);\n    } else {\n      console.warn('アップサート成功だが、返されたデータが空です');\n    }\n  } catch (err) {\n    console.error('アップサート処理エラー:', err.message);\n  }\n};\n\n\n  // ログインユーザーの権限を取得\n  const fetchUserRole = async (userId) => {\n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .select('role')\n        .eq('id', userId)\n        .single();\n\n      if (error) {\n        console.error('権限取得エラー:', error.message);\n      } else if (data) {\n        setUserRole(data.role);\n        console.log('ユーザー権限:', data.role);\n      } else {\n        console.warn('権限が取得できませんでした');\n      }\n    } catch (err) {\n      console.error('権限取得処理エラー:', err.message);\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        if (session) {\n          console.log('ログイン成功:', session.user);\n          await registerUser(session.user);\n          await fetchUserRole(session.user.id);  // 権限を取得\n        } else {\n          console.log('未ログイン状態');\n        }\n      } catch (err) {\n        console.error('セッション取得エラー:', err.message);\n      }\n    };\n    getUserInfo();\n  }, []);\n\n  return (\n    <div>\n      <h2>Googleログイン</h2>\n      <button onClick={handleGoogleLogin}>Googleでログイン</button>\n      {userRole && <p>あなたの権限: {userRole}</p>}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}