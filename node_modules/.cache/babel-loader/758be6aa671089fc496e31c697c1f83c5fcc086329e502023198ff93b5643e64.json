{"ast":null,"code":"// ユーザー情報を登録する関数\nconst registerUser = async user => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('users').upsert([{\n      id: user.id,\n      email: user.email,\n      name: user.user_metadata.full_name || 'No Name',\n      role: 'practitioner' // 初期値として設定\n    }]);\n    if (error) {\n      console.error('ユーザー登録エラー:', error.message);\n    } else if (data) {\n      console.log('ユーザー登録成功:', data);\n    } else {\n      console.warn('アップサートは成功したが、返されたデータが空です');\n    }\n  } catch (err) {\n    console.error('アップサート処理エラー:', err.message);\n  }\n};","map":{"version":3,"names":["registerUser","user","data","error","supabase","from","upsert","id","email","name","user_metadata","full_name","role","console","message","log","warn","err"],"sources":["/Users/y/Documents/GitHub/react-pwa-karute/src/components/Login.js"],"sourcesContent":["// ユーザー情報を登録する関数\nconst registerUser = async (user) => {\n  try {\n    const { data, error } = await supabase\n      .from('users')\n      .upsert([{ \n        id: user.id,  \n        email: user.email, \n        name: user.user_metadata.full_name || 'No Name', \n        role: 'practitioner'  // 初期値として設定\n      }]);\n\n    if (error) {\n      console.error('ユーザー登録エラー:', error.message);\n    } else if (data) {\n      console.log('ユーザー登録成功:', data);\n    } else {\n      console.warn('アップサートは成功したが、返されたデータが空です');\n    }\n  } catch (err) {\n    console.error('アップサート処理エラー:', err.message);\n  }\n};\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,MAAOC,IAAI,IAAK;EACnC,IAAI;IACF,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMC,QAAQ,CACnCC,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,CAAC;MACPC,EAAE,EAAEN,IAAI,CAACM,EAAE;MACXC,KAAK,EAAEP,IAAI,CAACO,KAAK;MACjBC,IAAI,EAAER,IAAI,CAACS,aAAa,CAACC,SAAS,IAAI,SAAS;MAC/CC,IAAI,EAAE,cAAc,CAAE;IACxB,CAAC,CAAC,CAAC;IAEL,IAAIT,KAAK,EAAE;MACTU,OAAO,CAACV,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACW,OAAO,CAAC;IAC5C,CAAC,MAAM,IAAIZ,IAAI,EAAE;MACfW,OAAO,CAACE,GAAG,CAAC,WAAW,EAAEb,IAAI,CAAC;IAChC,CAAC,MAAM;MACLW,OAAO,CAACG,IAAI,CAAC,0BAA0B,CAAC;IAC1C;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZJ,OAAO,CAACV,KAAK,CAAC,cAAc,EAAEc,GAAG,CAACH,OAAO,CAAC;EAC5C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}