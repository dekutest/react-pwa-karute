{"ast":null,"code":"var _jsxFileName = \"/Users/y/Documents/GitHub/react-pwa-karute/src/components/Treatment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchPatientName } from '../api/fetchPatientDetails';\nimport { addPatient, updatePatient, deletePatient } from '../api/patientOperations';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Treatment = () => {\n  _s();\n  const {\n    patientId\n  } = useParams();\n  const navigate = useNavigate();\n  const [patientName, setPatientName] = useState('');\n  const [editName, setEditName] = useState('');\n  const [editTeam, setEditTeam] = useState('');\n  const [isNew, setIsNew] = useState(false);\n  const [isEditing, setIsEditing] = useState(false); // 編集モード管理\n\n  useEffect(() => {\n    console.log(\"Current patientId from params:\", patientId); // デバッグ用\n\n    // 新規作成ページかどうかを判定\n    if (patientId === 'new') {\n      setIsNew(true);\n      setIsEditing(true); // 新規作成時は編集モードON\n      console.log(\"新規患者作成モード\");\n      return;\n    }\n\n    // 既存患者情報の取得（IDが数値またはUUIDである場合のみ）\n    if (patientId && patientId !== 'undefined' && patientId !== 'new') {\n      const getPatientDetails = async () => {\n        try {\n          const name = await fetchPatientName(patientId);\n          if (name) {\n            setPatientName(name);\n            setEditName(name);\n            console.log(\"取得した患者名:\", name); // デバッグ用\n          } else {\n            console.error(\"患者情報が見つかりませんでした\");\n          }\n        } catch (error) {\n          console.error(\"患者情報の取得に失敗しました:\", error.message);\n        }\n      };\n      getPatientDetails();\n    } else if (patientId !== 'new') {\n      console.error(\"無効な患者IDです:\", patientId); // デバッグ用\n    }\n  }, [patientId]);\n\n  // 患者を追加または更新\n  const handleSave = async () => {\n    try {\n      if (isNew) {\n        const result = await addPatient(editName, editTeam);\n        if (result && result.id) {\n          alert('患者を追加しました！');\n          console.log(\"生成された患者ID:\", result.id); // デバッグ用\n          setIsNew(false); // 新規モード解除\n          // 正しく生成されたIDでリダイレクト\n          navigate(`/treatment/${result.id}`);\n        } else {\n          alert('患者追加に失敗しました');\n        }\n      } else {\n        console.log(\"更新時の患者ID:\", patientId); // デバッグ用\n        if (!patientId || patientId === 'undefined') {\n          alert('無効な患者IDです');\n          return;\n        }\n        const result = await updatePatient(patientId, editName, editTeam);\n        if (result) {\n          alert('患者情報を更新しました！');\n        } else {\n          alert('患者情報の更新に失敗しました');\n        }\n      }\n      setIsEditing(false); // 編集モードをOFF\n    } catch (error) {\n      console.error('保存中にエラーが発生:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isNew ? '新規患者作成ページ' : '患者詳細ページ'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"\\u30C8\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u306B\\u623B\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isNew ? '患者情報を入力してください' : `患者名: ${patientName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), !isNew && !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), (isNew || isEditing) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u60A3\\u8005\\u540D\",\n          value: editName,\n          onChange: e => setEditName(e.target.value),\n          style: {\n            margin: '5px',\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u30C1\\u30FC\\u30E0\",\n          value: editTeam,\n          onChange: e => setEditTeam(e.target.value),\n          style: {\n            margin: '5px',\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            margin: '5px',\n            padding: '5px'\n          },\n          children: isNew ? '追加' : '保存'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Treatment, \"CTwAIKMlG7Av8Qh6T+ahxeTYw0Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Treatment;\nexport default Treatment;\nvar _c;\n$RefreshReg$(_c, \"Treatment\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","fetchPatientName","addPatient","updatePatient","deletePatient","jsxDEV","_jsxDEV","Fragment","_Fragment","Treatment","_s","patientId","navigate","patientName","setPatientName","editName","setEditName","editTeam","setEditTeam","isNew","setIsNew","isEditing","setIsEditing","console","log","getPatientDetails","name","error","message","handleSave","result","id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginBottom","placeholder","value","onChange","e","target","margin","padding","_c","$RefreshReg$"],"sources":["/Users/y/Documents/GitHub/react-pwa-karute/src/components/Treatment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchPatientName } from '../api/fetchPatientDetails';\nimport { addPatient, updatePatient, deletePatient } from '../api/patientOperations';\n\nconst Treatment = () => {\n  const { patientId } = useParams();\n  const navigate = useNavigate();\n  const [patientName, setPatientName] = useState('');\n  const [editName, setEditName] = useState('');\n  const [editTeam, setEditTeam] = useState('');\n  const [isNew, setIsNew] = useState(false);\n  const [isEditing, setIsEditing] = useState(false); // 編集モード管理\n\n  useEffect(() => {\n    console.log(\"Current patientId from params:\", patientId);  // デバッグ用\n\n    // 新規作成ページかどうかを判定\n    if (patientId === 'new') {\n      setIsNew(true);\n      setIsEditing(true); // 新規作成時は編集モードON\n      console.log(\"新規患者作成モード\");\n      return;\n    }\n\n    // 既存患者情報の取得（IDが数値またはUUIDである場合のみ）\n    if (patientId && patientId !== 'undefined' && patientId !== 'new') {\n      const getPatientDetails = async () => {\n        try {\n          const name = await fetchPatientName(patientId);\n          if (name) {\n            setPatientName(name);\n            setEditName(name);\n            console.log(\"取得した患者名:\", name);  // デバッグ用\n          } else {\n            console.error(\"患者情報が見つかりませんでした\");\n          }\n        } catch (error) {\n          console.error(\"患者情報の取得に失敗しました:\", error.message);\n        }\n      };\n      getPatientDetails();\n    } else if (patientId !== 'new') {\n      console.error(\"無効な患者IDです:\", patientId);  // デバッグ用\n    }\n  }, [patientId]);\n\n  // 患者を追加または更新\n  const handleSave = async () => {\n    try {\n      if (isNew) {\n        const result = await addPatient(editName, editTeam);\n        if (result && result.id) {\n          alert('患者を追加しました！');\n          console.log(\"生成された患者ID:\", result.id);  // デバッグ用\n          setIsNew(false);  // 新規モード解除\n          // 正しく生成されたIDでリダイレクト\n          navigate(`/treatment/${result.id}`);\n        } else {\n          alert('患者追加に失敗しました');\n        }\n      } else {\n        console.log(\"更新時の患者ID:\", patientId);  // デバッグ用\n        if (!patientId || patientId === 'undefined') {\n          alert('無効な患者IDです');\n          return;\n        }\n        const result = await updatePatient(patientId, editName, editTeam);\n        if (result) {\n          alert('患者情報を更新しました！');\n        } else {\n          alert('患者情報の更新に失敗しました');\n        }\n      }\n      setIsEditing(false); // 編集モードをOFF\n    } catch (error) {\n      console.error('保存中にエラーが発生:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{isNew ? '新規患者作成ページ' : '患者詳細ページ'}</h2>\n\n      <button onClick={() => navigate('/')}>\n        トップページに戻る\n      </button>\n\n      <div>\n        <h3>{isNew ? '患者情報を入力してください' : `患者名: ${patientName}`}</h3>\n\n        {!isNew && !isEditing && (\n          <button onClick={() => setIsEditing(true)} style={{ marginBottom: '10px' }}>\n            編集\n          </button>\n        )}\n\n        {(isNew || isEditing) && (\n          <>\n            <input\n              placeholder=\"患者名\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              style={{ margin: '5px', padding: '5px' }}\n            />\n            <input\n              placeholder=\"チーム\"\n              value={editTeam}\n              onChange={(e) => setEditTeam(e.target.value)}\n              style={{ margin: '5px', padding: '5px' }}\n            />\n            <button onClick={handleSave} style={{ margin: '5px', padding: '5px' }}>\n              {isNew ? '追加' : '保存'}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Treatment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}