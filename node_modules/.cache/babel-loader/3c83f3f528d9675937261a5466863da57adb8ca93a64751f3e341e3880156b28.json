{"ast":null,"code":"var _jsxFileName = \"/Users/y/Documents/GitHub/react-pwa-karute/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const handleGoogleLogin = async () => {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google'\n    });\n    if (error) console.error('ログインエラー:', error.message);\n  };\n\n  // ユーザー情報を登録する関数\n  const registerUser = async user => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('users').upsert([{\n        id: user.id,\n        // ユーザーIDを保存\n        email: user.email,\n        name: user.user_metadata.full_name,\n        role: 'practitioner'\n      }]);\n      if (error) {\n        console.error('ユーザー登録エラー:', error.message);\n      } else {\n        console.log('ユーザー登録成功:', data);\n      }\n    } catch (err) {\n      console.error('アップサート処理エラー:', err.message);\n    }\n  };\n  useEffect(() => {\n    const getUserInfo = async () => {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      if (session) {\n        console.log('ログイン成功:', session.user);\n        registerUser(session.user);\n      }\n    };\n    getUserInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Google\\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Google\\u3067\\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","supabase","jsxDEV","_jsxDEV","Login","_s","handleGoogleLogin","error","auth","signInWithOAuth","provider","console","message","registerUser","user","data","from","upsert","id","email","name","user_metadata","full_name","role","log","err","getUserInfo","session","getSession","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/y/Documents/GitHub/react-pwa-karute/src/components/Login.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\n\nconst Login = () => {\n  const handleGoogleLogin = async () => {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n    });\n    if (error) console.error('ログインエラー:', error.message);\n  };\n\n  // ユーザー情報を登録する関数\n  const registerUser = async (user) => {\n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .upsert([{ \n          id: user.id,  // ユーザーIDを保存\n          email: user.email, \n          name: user.user_metadata.full_name, \n          role: 'practitioner' \n        }]);\n\n      if (error) {\n        console.error('ユーザー登録エラー:', error.message);\n      } else {\n        console.log('ユーザー登録成功:', data);\n      }\n    } catch (err) {\n      console.error('アップサート処理エラー:', err.message);\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfo = async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n      if (session) {\n        console.log('ログイン成功:', session.user);\n        registerUser(session.user);\n      }\n    };\n    getUserInfo();\n  }, []);\n\n  return (\n    <div>\n      <h2>Googleログイン</h2>\n      <button onClick={handleGoogleLogin}>Googleでログイン</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAACC,eAAe,CAAC;MACpDC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,IAAIH,KAAK,EAAEI,OAAO,CAACJ,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACK,OAAO,CAAC;EACrD,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF,MAAM;QAAEC,IAAI;QAAER;MAAM,CAAC,GAAG,MAAMN,QAAQ,CACnCe,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,CAAC;QACPC,EAAE,EAAEJ,IAAI,CAACI,EAAE;QAAG;QACdC,KAAK,EAAEL,IAAI,CAACK,KAAK;QACjBC,IAAI,EAAEN,IAAI,CAACO,aAAa,CAACC,SAAS;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;MAEL,IAAIhB,KAAK,EAAE;QACTI,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACK,OAAO,CAAC;MAC5C,CAAC,MAAM;QACLD,OAAO,CAACa,GAAG,CAAC,WAAW,EAAET,IAAI,CAAC;MAChC;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZd,OAAO,CAACJ,KAAK,CAAC,cAAc,EAAEkB,GAAG,CAACb,OAAO,CAAC;IAC5C;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAM0B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAM;QAAEX,IAAI,EAAE;UAAEY;QAAQ;MAAE,CAAC,GAAG,MAAM1B,QAAQ,CAACO,IAAI,CAACoB,UAAU,CAAC,CAAC;MAC9D,IAAID,OAAO,EAAE;QACXhB,OAAO,CAACa,GAAG,CAAC,SAAS,EAAEG,OAAO,CAACb,IAAI,CAAC;QACpCD,YAAY,CAACc,OAAO,CAACb,IAAI,CAAC;MAC5B;IACF,CAAC;IACDY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB9B,OAAA;MAAQ+B,OAAO,EAAE5B,iBAAkB;MAAAuB,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/CID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}